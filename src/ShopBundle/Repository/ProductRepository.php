<?php

namespace ShopBundle\Repository;

use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\ORM\EntityManagerInterface;
use Doctrine\ORM\Mapping;
use ShopBundle\Entity\Product;

/**
 * ProductRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductRepository extends \Doctrine\ORM\EntityRepository
{
    public function __construct(EntityManagerInterface $em)
    {
        parent::__construct($em, new Mapping\ClassMetadata(Product::class));
    }

    /**
     * @param Product $product
     * @throws \Doctrine\ORM\OptimisticLockException
     */
    public function create($product)
    {
        $this->_em->persist($product);
        $this->_em->flush($product);
    }

    /**
     * @param Product $product
     * @throws \Doctrine\ORM\OptimisticLockException
     */
    public function edit($product)
    {
        $this->_em->merge($product);
        $this->_em->flush($product);
    }

    /**
     * @param string $needle
     * @return ArrayCollection|Product[]|null
     */
    public function search(string $needle)
    {
        $query = $this->_em
            ->createQuery("SELECT p
                                FROM ShopBundle:Product AS p
                                WHERE p.isOutOfStock = false
                                AND p.title LIKE :needle
                                ORDER BY p.price ASC"
            )
            ->setParameter('needle', '%'.$needle.'%');

        return $query->getResult();
    }

//    /**
//     * @param Product $product
//     * @throws \Doctrine\ORM\OptimisticLockException
//     */
//    public function delete($product)
//    {
//        $this->_em->remove($product);
//        $this->_em->flush($product);
//    }
}
